// Code generated by MockGen. DO NOT EDIT.
// Source: repository/interfaces.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "github.com/mdmims/go-echo-crud/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockItemsI is a mock of ItemsI interface.
type MockItemsI struct {
	ctrl     *gomock.Controller
	recorder *MockItemsIMockRecorder
}

// MockItemsIMockRecorder is the mock recorder for MockItemsI.
type MockItemsIMockRecorder struct {
	mock *MockItemsI
}

// NewMockItemsI creates a new mock instance.
func NewMockItemsI(ctrl *gomock.Controller) *MockItemsI {
	mock := &MockItemsI{ctrl: ctrl}
	mock.recorder = &MockItemsIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockItemsI) EXPECT() *MockItemsIMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockItemsI) Create(i *models.Items) (*models.Items, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", i)
	ret0, _ := ret[0].(*models.Items)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockItemsIMockRecorder) Create(i interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockItemsI)(nil).Create), i)
}

// GetAll mocks base method.
func (m *MockItemsI) GetAll() ([]models.Items, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]models.Items)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockItemsIMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockItemsI)(nil).GetAll))
}

// GetById mocks base method.
func (m *MockItemsI) GetById(id int) (*models.Items, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(*models.Items)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockItemsIMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockItemsI)(nil).GetById), id)
}
